--
-- PostgreSQL database dump
--

-- Dumped from database version 16.9 (Debian 16.9-1.pgdg120+1)
-- Dumped by pg_dump version 16.9

-- Started on 2025-07-21 13:54:40 UTC

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 5 (class 2615 OID 2200)
-- Name: public; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA public;


--
-- TOC entry 3472 (class 0 OID 0)
-- Dependencies: 5
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON SCHEMA public IS 'standard public schema';


--
-- TOC entry 230 (class 1255 OID 17382)
-- Name: check_data_caricamento_documento(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.check_data_caricamento_documento() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    data_inizio DATE;
    data_fine DATE;
BEGIN
    SELECT H.Data_inizio, H.Data_fine
    INTO data_inizio, data_fine
    FROM Hackathon H
    WHERE h.ID_hackathon = NEW.ID_hackathon;

    IF NEW.DataCaricamento < data_inizio OR NEW.DataCaricamento > data_fine THEN
        RAISE EXCEPTION 'La data di caricamento non è compresa tra la data di inizio 
        e quella di fine dell’hackathon.';
    END IF;

    RETURN NEW;
END;
$$;


--
-- TOC entry 236 (class 1255 OID 17259)
-- Name: check_hackathon_overlap(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.check_hackathon_overlap() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
IF EXISTS (
SELECT 1
FROM Registrazione R
JOIN Hackathon H1 ON R.ID_hackathon = H1.ID_hackathon
JOIN Hackathon H2 ON H2.ID_hackathon = NEW.ID_hackathon
WHERE R.Email_partecipante = NEW.Email_partecipante
AND R.ID_hackathon <> NEW.ID_hackathon
AND H1.Data_inizio <= H2.Data_fine
AND H2.Data_inizio <= H1.Data_fine
) THEN
RAISE EXCEPTION 'Non è possibile iscriversi a due hackathon con date sovrapposte.';
END IF;
RETURN NEW;
END;
$$;


--
-- TOC entry 235 (class 1255 OID 17255)
-- Name: check_max_partecipanti(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.check_max_partecipanti() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
partecipanti_attuali INTEGER;
max_partecipanti INTEGER;
BEGIN
SELECT COUNT(*) INTO partecipanti_attuali
FROM Registrazione
WHERE ID_hackathon = NEW.ID_hackathon;
SELECT Num_max_partecipanti INTO max_partecipanti
FROM Hackathon
WHERE ID_hackathon = NEW.ID_hackathon;
IF partecipanti_attuali >= max_partecipanti THEN
RAISE EXCEPTION 'Numero massimo di partecipanti per questo hackathon già raggiunto.';
END IF;
RETURN NEW;
END;
$$;


--
-- TOC entry 229 (class 1255 OID 17271)
-- Name: check_max_partecipanti_per_team(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.check_max_partecipanti_per_team() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    partecipanti_correnti INTEGER;
    max_per_team INTEGER;
BEGIN
    SELECT COUNT(*) INTO partecipanti_correnti
    FROM Partecipante_team
    WHERE Nome_team = NEW.Nome_team;

    SELECT H.Num_max_team INTO max_per_team
    FROM Hackathon H
    WHERE id_hackathon = NEW.id_hackathon;

    IF partecipanti_correnti >= max_per_team THEN
      RAISE EXCEPTION 'Il team % ha gi`a raggiunto il numero massimo di partecipanti (%).' , NEW.Nome_team, max_per_team;
    END IF;

    RETURN NEW;
END;
$$;


--
-- TOC entry 248 (class 1255 OID 17269)
-- Name: check_max_team(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.check_max_team() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
team_correnti INTEGER;
max_team INTEGER;
BEGIN
SELECT COUNT(*) INTO team_correnti
FROM Team_Hackathon
WHERE ID_hackathon = NEW.ID_hackathon;
SELECT Num_max_team INTO max_team
FROM Hackathon
WHERE ID_hackathon = NEW.ID_hackathon;
IF team_correnti >= max_team THEN
RAISE EXCEPTION 'Numero massimo di team per questo hackathon già raggiunto.';
END IF;
RETURN NEW;
END;
$$;


--
-- TOC entry 234 (class 1255 OID 17250)
-- Name: check_unique_partecipante_per_hackathon(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.check_unique_partecipante_per_hackathon() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM Team_Hackathon th
        WHERE th.nome_team=NEW.nome_team
        AND th.id_hackathon in (
            SELECT th2.id_hackathon 
            FROM Team_Hackathon th2 NATURAL JOIN Partecipante_Team pt
            WHERE pt.email_partecipante = NEW.email_partecipante
            AND th2.nome_team <> NEW.nome_team
        )
    ) THEN
        RAISE EXCEPTION 'Il partecipante è già in un team per questo hackathon';
    END IF;

    RETURN NEW;
END;
$$;


--
-- TOC entry 233 (class 1255 OID 17563)
-- Name: chiudi_registrazioni_scadute(); Type: PROCEDURE; Schema: public; Owner: -
--

CREATE PROCEDURE public.chiudi_registrazioni_scadute()
    LANGUAGE plpgsql
    AS $$
BEGIN
    UPDATE Hackathon
    SET Registrazioni_aperte = FALSE
    WHERE Registrazioni_aperte = TRUE
      AND CURRENT_DATE > Data_fine_registrazioni;
END;
$$;


--
-- TOC entry 232 (class 1255 OID 17385)
-- Name: classifica_team(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.classifica_team(id_evento integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
    risultato TEXT := '';
    r RECORD;
BEGIN
    FOR r IN (
        SELECT V.Nome_team, AVG(V.voto) AS media
        FROM Voto V
        WHERE V.ID_hackathon = id_evento
        GROUP BY V.Nome_team
        ORDER BY media DESC
    )
    LOOP
        risultato := risultato || r.Nome_team || ' ' || r.media || ', ';
    END LOOP;

    risultato := RTRIM(risultato, ', ');
    RETURN risultato;
END;
$$;


--
-- TOC entry 250 (class 1255 OID 17403)
-- Name: documenti_team(character varying, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.documenti_team(nome_team_in character varying, id_hackaton_in integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
    s_out TEXT := '';
    doc RECORD;
BEGIN
    FOR doc IN (
        SELECT ID_doc
        FROM Documento d
        WHERE d.Nome_team = nome_team_in and d.id_hackathon = id_hackaton_in
        ORDER BY DataCaricamento
    )
    LOOP
        s_out := s_out || doc.ID_doc || ', ';
    END LOOP;
    s_out := rtrim(s_out);
    s_out := rtrim(s_out,',');
    RETURN s_out;
END;
$$;


--
-- TOC entry 231 (class 1255 OID 17384)
-- Name: media_voti_team(text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.media_voti_team(nome text, hackathon_id integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
media NUMERIC;
BEGIN
SELECT AVG(voto) INTO media
FROM Voto
WHERE Nome_team = nome AND ID_hackathon=hackathon_id;
RETURN media;
END;
$$;


--
-- TOC entry 249 (class 1255 OID 17399)
-- Name: partecipanti_hackathon(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.partecipanti_hackathon(id_evento integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
    s_out TEXT := '';
    part Partecipante%ROWTYPE;
BEGIN
    FOR part IN
        SELECT P.*
        FROM Partecipante P
        JOIN Registrazione R ON P.Email = R.Email_partecipante
        WHERE R.ID_hackathon = id_evento
    LOOP
        s_out := s_out || part.Nome || ' ' || part.Cognome || ' ' || part.Email || ', ';
    END LOOP;

    s_out := RTRIM(s_out, ', ');
    RETURN s_out;
END;
$$;


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 224 (class 1259 OID 17314)
-- Name: commento; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.commento (
    email_giudice character varying(100) NOT NULL,
    id_doc integer NOT NULL,
    commento text NOT NULL
);


--
-- TOC entry 228 (class 1259 OID 17365)
-- Name: documento; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.documento (
    id_doc integer NOT NULL,
    descrizione text NOT NULL,
    datacaricamento date NOT NULL,
    nome_team character varying(50) NOT NULL,
    id_hackathon integer NOT NULL
);


--
-- TOC entry 227 (class 1259 OID 17364)
-- Name: documento_id_doc_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.documento_id_doc_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3473 (class 0 OID 0)
-- Dependencies: 227
-- Name: documento_id_doc_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.documento_id_doc_seq OWNED BY public.documento.id_doc;


--
-- TOC entry 217 (class 1259 OID 17124)
-- Name: giudice; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.giudice (
    email character varying(100) NOT NULL,
    nome character varying(50) NOT NULL,
    cognome character varying(50) NOT NULL,
    disponibile boolean DEFAULT true
);


--
-- TOC entry 219 (class 1259 OID 17131)
-- Name: hackathon; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.hackathon (
    id_hackathon integer NOT NULL,
    titolo character varying(100) NOT NULL,
    sede character varying(100) NOT NULL,
    data_inizio date NOT NULL,
    data_fine date NOT NULL,
    num_max_partecipanti integer,
    num_max_team integer,
    descrizione text,
    registrazioni_aperte boolean DEFAULT false NOT NULL,
    data_fine_registrazioni date,
    email_organizzatore character varying(100) NOT NULL,
    CONSTRAINT chk_deadline_if_registrazioni_aperte CHECK ((NOT ((registrazioni_aperte = true) AND (data_fine_registrazioni IS NULL)))),
    CONSTRAINT chk_max_partecipanti CHECK ((num_max_partecipanti > 0)),
    CONSTRAINT chk_max_team CHECK ((num_max_team > 0))
);


--
-- TOC entry 218 (class 1259 OID 17130)
-- Name: hackathon_id_hackathon_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.hackathon_id_hackathon_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- TOC entry 3474 (class 0 OID 0)
-- Dependencies: 218
-- Name: hackathon_id_hackathon_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.hackathon_id_hackathon_seq OWNED BY public.hackathon.id_hackathon;


--
-- TOC entry 226 (class 1259 OID 17347)
-- Name: invitogiudice; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.invitogiudice (
    email_giudice character varying(100) NOT NULL,
    id_hackathon integer NOT NULL
);


--
-- TOC entry 216 (class 1259 OID 17119)
-- Name: organizzatore; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.organizzatore (
    email character varying(100) NOT NULL,
    nome character varying(50) NOT NULL,
    cognome character varying(50) NOT NULL,
    max_hackathon_gestibili integer NOT NULL
);


--
-- TOC entry 215 (class 1259 OID 17114)
-- Name: partecipante; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.partecipante (
    email character varying(100) NOT NULL,
    nome character varying(50) NOT NULL,
    cognome character varying(50) NOT NULL,
    ruolonelteam character varying(30)
);


--
-- TOC entry 223 (class 1259 OID 17183)
-- Name: partecipante_team; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.partecipante_team (
    email_partecipante character varying(100) NOT NULL,
    nome_team character varying(50) NOT NULL
);


--
-- TOC entry 222 (class 1259 OID 17168)
-- Name: registrazione; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.registrazione (
    email_partecipante character varying(100) NOT NULL,
    id_hackathon integer NOT NULL
);


--
-- TOC entry 220 (class 1259 OID 17148)
-- Name: team; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.team (
    nome_team character varying(50) NOT NULL
);


--
-- TOC entry 221 (class 1259 OID 17153)
-- Name: team_hackathon; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.team_hackathon (
    nome_team character varying(50) NOT NULL,
    id_hackathon integer NOT NULL
);


--
-- TOC entry 225 (class 1259 OID 17331)
-- Name: voto; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.voto (
    email_giudice character varying(100) NOT NULL,
    nome_team character varying(50) NOT NULL,
    id_hackathon integer NOT NULL,
    voto integer NOT NULL,
    CONSTRAINT chk_voto_range CHECK (((voto >= 0) AND (voto <= 10)))
);


--
-- TOC entry 3262 (class 2604 OID 17368)
-- Name: documento id_doc; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.documento ALTER COLUMN id_doc SET DEFAULT nextval('public.documento_id_doc_seq'::regclass);


--
-- TOC entry 3260 (class 2604 OID 17134)
-- Name: hackathon id_hackathon; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.hackathon ALTER COLUMN id_hackathon SET DEFAULT nextval('public.hackathon_id_hackathon_seq'::regclass);


--
-- TOC entry 3462 (class 0 OID 17314)
-- Dependencies: 224
-- Data for Name: commento; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.commento VALUES ('giudice1@tech.it', 1, 'Ottima presentazione, idea innovativa e ben strutturata');
INSERT INTO public.commento VALUES ('giudice2@innovation.it', 1, 'Buona analisi di mercato, manca dettaglio tecnico');
INSERT INTO public.commento VALUES ('giudice1@tech.it', 2, 'Documentazione API completa e ben organizzata');
INSERT INTO public.commento VALUES ('giudice2@innovation.it', 2, 'Implementazione solida, ottimo lavoro di squadra');
INSERT INTO public.commento VALUES ('giudice3@startup.it', 3, 'Business plan convincente, proiezioni realistiche');
INSERT INTO public.commento VALUES ('giudice4@digital.it', 3, 'Strategia di marketing ben definita');
INSERT INTO public.commento VALUES ('giudice3@startup.it', 4, 'Prototipo funzionale, UI intuitiva');
INSERT INTO public.commento VALUES ('giudice4@digital.it', 4, 'Buone performance, codice pulito');
INSERT INTO public.commento VALUES ('giudice5@code.it', 5, 'Soluzione IoT interessante e scalabile');
INSERT INTO public.commento VALUES ('giudice6@tech.it', 5, 'Integrazione sensori ben realizzata');
INSERT INTO public.commento VALUES ('giudice7@innovation.it', 7, 'App turismo ben progettata');
INSERT INTO public.commento VALUES ('giudice8@startup.it', 8, 'Dashboard analytics molto utile');
INSERT INTO public.commento VALUES ('giudice9@digital.it', 9, 'Piattaforma green tech promettente');
INSERT INTO public.commento VALUES ('giudice10@code.it', 10, 'Soluzione energie rinnovabili innovativa');
INSERT INTO public.commento VALUES ('giudice1@tech.it', 11, 'Demo video efficace e coinvolgente');


--
-- TOC entry 3466 (class 0 OID 17365)
-- Dependencies: 228
-- Data for Name: documento; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.documento VALUES (2, 'Presentazione progetto FinTech App', '2024-03-16', 'CodeMasters', 1);
INSERT INTO public.documento VALUES (3, 'Documentazione tecnica API', '2024-03-16', 'TechNinjas', 1);
INSERT INTO public.documento VALUES (4, 'Business Plan startup digitale', '2024-04-20', 'InnovateHub', 2);
INSERT INTO public.documento VALUES (5, 'Prototipo app mobile', '2024-04-21', 'DevStorm', 2);
INSERT INTO public.documento VALUES (6, 'Soluzione IoT per smart city', '2024-05-11', 'DigitalCrafters', 3);
INSERT INTO public.documento VALUES (7, 'Piattaforma e-commerce innovativa', '2024-05-12', 'ByteBuilders', 3);
INSERT INTO public.documento VALUES (8, 'App per turismo digitale', '2024-06-08', 'AppCreators', 4);
INSERT INTO public.documento VALUES (9, 'Dashboard analytics', '2024-06-09', 'DataDrivers', 4);
INSERT INTO public.documento VALUES (10, 'Piattaforma green tech', '2024-07-23', 'WebWizards', 5);
INSERT INTO public.documento VALUES (11, 'Soluzione energie rinnovabili', '2024-07-24', 'SolutionSeekers', 5);
INSERT INTO public.documento VALUES (12, 'Demo video progetto', '2024-03-17', 'CodeWarriors', 1);
INSERT INTO public.documento VALUES (13, 'Pitch presentation', '2024-04-21', 'TechTitans', 2);
INSERT INTO public.documento VALUES (14, 'Codice sorgente completo', '2024-05-12', 'InnovatorsUnited', 3);
INSERT INTO public.documento VALUES (15, 'Manual utente applicazione', '2024-06-09', 'DevDynamos', 4);
INSERT INTO public.documento VALUES (16, 'Report analisi mercato', '2024-07-24', 'DigitalDreamers', 5);


--
-- TOC entry 3455 (class 0 OID 17124)
-- Dependencies: 217
-- Data for Name: giudice; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.giudice VALUES ('giudice1@tech.it', 'Andrea', 'Colombo', true);
INSERT INTO public.giudice VALUES ('giudice2@innovation.it', 'Marta', 'Rizzo', true);
INSERT INTO public.giudice VALUES ('giudice3@startup.it', 'Davide', 'Marino', false);
INSERT INTO public.giudice VALUES ('giudice4@digital.it', 'Elisa', 'Gallo', true);
INSERT INTO public.giudice VALUES ('giudice5@code.it', 'Matteo', 'Bruno', true);
INSERT INTO public.giudice VALUES ('giudice6@tech.it', 'Alessia', 'De Luca', false);
INSERT INTO public.giudice VALUES ('giudice7@innovation.it', 'Simone', 'Moretti', true);
INSERT INTO public.giudice VALUES ('giudice8@startup.it', 'Valentina', 'Barbieri', true);
INSERT INTO public.giudice VALUES ('giudice9@digital.it', 'Federico', 'Pellegrini', true);
INSERT INTO public.giudice VALUES ('giudice10@code.it', 'Martina', 'Fontana', false);


--
-- TOC entry 3457 (class 0 OID 17131)
-- Dependencies: 219
-- Data for Name: hackathon; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.hackathon VALUES (1, 'CodeSprint Milano', 'Milano', '2024-03-15', '2024-03-17', 100, 20, 'Hackathon di 3 giorni per sviluppare soluzioni innovative nel settore fintech', true, '2024-03-10', 'organizzatori@codesprint.it');
INSERT INTO public.hackathon VALUES (2, 'Tech Challenge Roma', 'Roma', '2024-04-20', '2024-04-21', 80, 15, 'Competizione tecnologica per startup e sviluppatori', true, '2024-04-15', 'info@techchallenge.it');
INSERT INTO public.hackathon VALUES (3, 'Innovation Days Torino', 'Torino', '2024-05-10', '2024-05-12', 120, 25, 'Evento dedicato all innovazione e alle nuove tecnologie', false, '2024-05-05', 'eventi@innovationdays.it');
INSERT INTO public.hackathon VALUES (4, 'Digital Hackathon Napoli', 'Napoli', '2024-06-08', '2024-06-09', 60, 12, 'Hackathon focalizzato su soluzioni digitali per il territorio', true, '2024-06-03', 'napoli@digitalhack.it');
INSERT INTO public.hackathon VALUES (5, 'Green Tech Challenge', 'Bologna', '2024-07-22', '2024-07-24', 90, 18, 'Competizione per sviluppare tecnologie sostenibili', true, '2024-07-17', 'green@techchallenge.it');


--
-- TOC entry 3464 (class 0 OID 17347)
-- Dependencies: 226
-- Data for Name: invitogiudice; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.invitogiudice VALUES ('giudice1@tech.it', 1);
INSERT INTO public.invitogiudice VALUES ('giudice2@innovation.it', 1);
INSERT INTO public.invitogiudice VALUES ('giudice3@startup.it', 2);
INSERT INTO public.invitogiudice VALUES ('giudice4@digital.it', 2);
INSERT INTO public.invitogiudice VALUES ('giudice5@code.it', 3);
INSERT INTO public.invitogiudice VALUES ('giudice6@tech.it', 3);
INSERT INTO public.invitogiudice VALUES ('giudice7@innovation.it', 4);
INSERT INTO public.invitogiudice VALUES ('giudice8@startup.it', 4);
INSERT INTO public.invitogiudice VALUES ('giudice9@digital.it', 5);
INSERT INTO public.invitogiudice VALUES ('giudice10@code.it', 5);
INSERT INTO public.invitogiudice VALUES ('giudice1@tech.it', 3);
INSERT INTO public.invitogiudice VALUES ('giudice2@innovation.it', 4);
INSERT INTO public.invitogiudice VALUES ('giudice4@digital.it', 5);


--
-- TOC entry 3454 (class 0 OID 17119)
-- Dependencies: 216
-- Data for Name: organizzatore; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.organizzatore VALUES ('organizzatori@codesprint.it', 'Mario', 'Bianchi', 5);
INSERT INTO public.organizzatore VALUES ('info@techchallenge.it', 'Anna', 'Rossi', 3);
INSERT INTO public.organizzatore VALUES ('eventi@innovationdays.it', 'Paolo', 'Verdi', 8);
INSERT INTO public.organizzatore VALUES ('napoli@digitalhack.it', 'Claudia', 'Neri', 4);
INSERT INTO public.organizzatore VALUES ('green@techchallenge.it', 'Roberto', 'Galli', 6);
INSERT INTO public.organizzatore VALUES ('tech@events.it', 'Silvia', 'Moretti', 7);
INSERT INTO public.organizzatore VALUES ('innovation@hub.it', 'Giuseppe', 'Ferrari', 5);
INSERT INTO public.organizzatore VALUES ('digital@solution.it', 'Francesca', 'Romano', 4);
INSERT INTO public.organizzatore VALUES ('startup@accelerator.it', 'Lorenzo', 'Conti', 6);
INSERT INTO public.organizzatore VALUES ('hackathon@manager.it', 'Valentina', 'Ricci', 9);


--
-- TOC entry 3453 (class 0 OID 17114)
-- Dependencies: 215
-- Data for Name: partecipante; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.partecipante VALUES ('marco.rossi@gmail.com', 'Marco', 'Rossi', 'Developer');
INSERT INTO public.partecipante VALUES ('giulia.bianchi@yahoo.it', 'Giulia', 'Bianchi', 'Designer');
INSERT INTO public.partecipante VALUES ('alessandro.verdi@outlook.com', 'Alessandro', 'Verdi', 'Developer');
INSERT INTO public.partecipante VALUES ('francesca.ferrari@gmail.com', 'Francesca', 'Ferrari', 'Project Manager');
INSERT INTO public.partecipante VALUES ('luca.romano@hotmail.com', 'Luca', 'Romano', 'Developer');
INSERT INTO public.partecipante VALUES ('sara.colombo@gmail.com', 'Sara', 'Colombo', 'Designer');
INSERT INTO public.partecipante VALUES ('davide.ricci@yahoo.it', 'Davide', 'Ricci', 'Developer');
INSERT INTO public.partecipante VALUES ('elena.marino@gmail.com', 'Elena', 'Marino', 'Marketing');
INSERT INTO public.partecipante VALUES ('andrea.gallo@outlook.com', 'Andrea', 'Gallo', 'Developer');
INSERT INTO public.partecipante VALUES ('chiara.conti@gmail.com', 'Chiara', 'Conti', 'UI/UX Designer');
INSERT INTO public.partecipante VALUES ('matteo.bruno@hotmail.com', 'Matteo', 'Bruno', 'Backend Developer');
INSERT INTO public.partecipante VALUES ('laura.de.luca@gmail.com', 'Laura', 'De Luca', 'Frontend Developer');
INSERT INTO public.partecipante VALUES ('simone.moretti@yahoo.it', 'Simone', 'Moretti', 'Data Scientist');
INSERT INTO public.partecipante VALUES ('valentina.barbieri@gmail.com', 'Valentina', 'Barbieri', 'Business Analyst');
INSERT INTO public.partecipante VALUES ('federico.pellegrini@outlook.com', 'Federico', 'Pellegrini', 'Developer');
INSERT INTO public.partecipante VALUES ('martina.fontana@gmail.com', 'Martina', 'Fontana', 'Designer');
INSERT INTO public.partecipante VALUES ('giovanni.santoro@hotmail.com', 'Giovanni', 'Santoro', 'DevOps');
INSERT INTO public.partecipante VALUES ('alice.marini@gmail.com', 'Alice', 'Marini', 'Full Stack Developer');
INSERT INTO public.partecipante VALUES ('lorenzo.villa@yahoo.it', 'Lorenzo', 'Villa', 'Mobile Developer');
INSERT INTO public.partecipante VALUES ('sofia.greco@gmail.com', 'Sofia', 'Greco', 'Product Manager');
INSERT INTO public.partecipante VALUES ('antonio.lombardi@outlook.com', 'Antonio', 'Lombardi', 'Developer');
INSERT INTO public.partecipante VALUES ('rebecca.rizzo@gmail.com', 'Rebecca', 'Rizzo', 'Designer');
INSERT INTO public.partecipante VALUES ('diego.costa@hotmail.com', 'Diego', 'Costa', 'Security Specialist');
INSERT INTO public.partecipante VALUES ('camilla.russo@gmail.com', 'Camilla', 'Russo', 'QA Engineer');
INSERT INTO public.partecipante VALUES ('nicola.ferrara@yahoo.it', 'Nicola', 'Ferrara', 'Developer');
INSERT INTO public.partecipante VALUES ('irene.orlando@gmail.com', 'Irene', 'Orlando', 'Scrum Master');
INSERT INTO public.partecipante VALUES ('alberto.leone@outlook.com', 'Alberto', 'Leone', 'AI Developer');
INSERT INTO public.partecipante VALUES ('giorgia.longo@gmail.com', 'Giorgia', 'Longo', 'Growth Hacker');
INSERT INTO public.partecipante VALUES ('stefano.d.angelo@hotmail.com', 'Stefano', 'D Angelo', 'Backend Developer');
INSERT INTO public.partecipante VALUES ('carla.benedetti@gmail.com', 'Carla', 'Benedetti', 'Frontend Developer');


--
-- TOC entry 3461 (class 0 OID 17183)
-- Dependencies: 223
-- Data for Name: partecipante_team; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.partecipante_team VALUES ('marco.rossi@gmail.com', 'CodeMasters');
INSERT INTO public.partecipante_team VALUES ('giulia.bianchi@yahoo.it', 'CodeMasters');
INSERT INTO public.partecipante_team VALUES ('alessandro.verdi@outlook.com', 'TechNinjas');
INSERT INTO public.partecipante_team VALUES ('francesca.ferrari@gmail.com', 'TechNinjas');
INSERT INTO public.partecipante_team VALUES ('luca.romano@hotmail.com', 'InnovateHub');
INSERT INTO public.partecipante_team VALUES ('sara.colombo@gmail.com', 'InnovateHub');
INSERT INTO public.partecipante_team VALUES ('davide.ricci@yahoo.it', 'DevStorm');
INSERT INTO public.partecipante_team VALUES ('elena.marino@gmail.com', 'DevStorm');
INSERT INTO public.partecipante_team VALUES ('andrea.gallo@outlook.com', 'DigitalCrafters');
INSERT INTO public.partecipante_team VALUES ('chiara.conti@gmail.com', 'DigitalCrafters');
INSERT INTO public.partecipante_team VALUES ('matteo.bruno@hotmail.com', 'ByteBuilders');
INSERT INTO public.partecipante_team VALUES ('laura.de.luca@gmail.com', 'ByteBuilders');
INSERT INTO public.partecipante_team VALUES ('simone.moretti@yahoo.it', 'AppCreators');
INSERT INTO public.partecipante_team VALUES ('valentina.barbieri@gmail.com', 'AppCreators');
INSERT INTO public.partecipante_team VALUES ('federico.pellegrini@outlook.com', 'DataDrivers');
INSERT INTO public.partecipante_team VALUES ('martina.fontana@gmail.com', 'DataDrivers');
INSERT INTO public.partecipante_team VALUES ('giovanni.santoro@hotmail.com', 'WebWizards');
INSERT INTO public.partecipante_team VALUES ('alice.marini@gmail.com', 'WebWizards');
INSERT INTO public.partecipante_team VALUES ('lorenzo.villa@yahoo.it', 'SolutionSeekers');
INSERT INTO public.partecipante_team VALUES ('sofia.greco@gmail.com', 'SolutionSeekers');


--
-- TOC entry 3460 (class 0 OID 17168)
-- Dependencies: 222
-- Data for Name: registrazione; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.registrazione VALUES ('marco.rossi@gmail.com', 1);
INSERT INTO public.registrazione VALUES ('giulia.bianchi@yahoo.it', 1);
INSERT INTO public.registrazione VALUES ('alessandro.verdi@outlook.com', 1);
INSERT INTO public.registrazione VALUES ('francesca.ferrari@gmail.com', 1);
INSERT INTO public.registrazione VALUES ('luca.romano@hotmail.com', 2);
INSERT INTO public.registrazione VALUES ('sara.colombo@gmail.com', 2);
INSERT INTO public.registrazione VALUES ('davide.ricci@yahoo.it', 2);
INSERT INTO public.registrazione VALUES ('elena.marino@gmail.com', 3);
INSERT INTO public.registrazione VALUES ('andrea.gallo@outlook.com', 3);
INSERT INTO public.registrazione VALUES ('chiara.conti@gmail.com', 3);
INSERT INTO public.registrazione VALUES ('matteo.bruno@hotmail.com', 4);
INSERT INTO public.registrazione VALUES ('laura.de.luca@gmail.com', 4);
INSERT INTO public.registrazione VALUES ('simone.moretti@yahoo.it', 4);
INSERT INTO public.registrazione VALUES ('valentina.barbieri@gmail.com', 5);
INSERT INTO public.registrazione VALUES ('federico.pellegrini@outlook.com', 5);
INSERT INTO public.registrazione VALUES ('martina.fontana@gmail.com', 1);
INSERT INTO public.registrazione VALUES ('giovanni.santoro@hotmail.com', 1);
INSERT INTO public.registrazione VALUES ('alice.marini@gmail.com', 2);
INSERT INTO public.registrazione VALUES ('lorenzo.villa@yahoo.it', 3);
INSERT INTO public.registrazione VALUES ('sofia.greco@gmail.com', 4);


--
-- TOC entry 3458 (class 0 OID 17148)
-- Dependencies: 220
-- Data for Name: team; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.team VALUES ('CodeMasters');
INSERT INTO public.team VALUES ('TechNinjas');
INSERT INTO public.team VALUES ('InnovateHub');
INSERT INTO public.team VALUES ('DevStorm');
INSERT INTO public.team VALUES ('DigitalCrafters');
INSERT INTO public.team VALUES ('ByteBuilders');
INSERT INTO public.team VALUES ('AppCreators');
INSERT INTO public.team VALUES ('DataDrivers');
INSERT INTO public.team VALUES ('WebWizards');
INSERT INTO public.team VALUES ('SolutionSeekers');
INSERT INTO public.team VALUES ('CodeWarriors');
INSERT INTO public.team VALUES ('TechTitans');
INSERT INTO public.team VALUES ('InnovatorsUnited');
INSERT INTO public.team VALUES ('DevDynamos');
INSERT INTO public.team VALUES ('DigitalDreamers');


--
-- TOC entry 3459 (class 0 OID 17153)
-- Dependencies: 221
-- Data for Name: team_hackathon; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.team_hackathon VALUES ('CodeMasters', 1);
INSERT INTO public.team_hackathon VALUES ('TechNinjas', 1);
INSERT INTO public.team_hackathon VALUES ('InnovateHub', 2);
INSERT INTO public.team_hackathon VALUES ('DevStorm', 2);
INSERT INTO public.team_hackathon VALUES ('DigitalCrafters', 3);
INSERT INTO public.team_hackathon VALUES ('ByteBuilders', 3);
INSERT INTO public.team_hackathon VALUES ('AppCreators', 4);
INSERT INTO public.team_hackathon VALUES ('DataDrivers', 4);
INSERT INTO public.team_hackathon VALUES ('WebWizards', 5);
INSERT INTO public.team_hackathon VALUES ('SolutionSeekers', 5);
INSERT INTO public.team_hackathon VALUES ('CodeWarriors', 1);
INSERT INTO public.team_hackathon VALUES ('TechTitans', 2);
INSERT INTO public.team_hackathon VALUES ('InnovatorsUnited', 3);
INSERT INTO public.team_hackathon VALUES ('DevDynamos', 4);
INSERT INTO public.team_hackathon VALUES ('DigitalDreamers', 5);


--
-- TOC entry 3463 (class 0 OID 17331)
-- Dependencies: 225
-- Data for Name: voto; Type: TABLE DATA; Schema: public; Owner: -
--

INSERT INTO public.voto VALUES ('giudice1@tech.it', 'CodeMasters', 1, 9);
INSERT INTO public.voto VALUES ('giudice2@innovation.it', 'CodeMasters', 1, 8);
INSERT INTO public.voto VALUES ('giudice1@tech.it', 'TechNinjas', 1, 7);
INSERT INTO public.voto VALUES ('giudice2@innovation.it', 'TechNinjas', 1, 8);
INSERT INTO public.voto VALUES ('giudice3@startup.it', 'InnovateHub', 2, 9);
INSERT INTO public.voto VALUES ('giudice4@digital.it', 'InnovateHub', 2, 9);
INSERT INTO public.voto VALUES ('giudice3@startup.it', 'DevStorm', 2, 8);
INSERT INTO public.voto VALUES ('giudice4@digital.it', 'DevStorm', 2, 8);
INSERT INTO public.voto VALUES ('giudice5@code.it', 'DigitalCrafters', 3, 9);
INSERT INTO public.voto VALUES ('giudice6@tech.it', 'DigitalCrafters', 3, 8);
INSERT INTO public.voto VALUES ('giudice5@code.it', 'ByteBuilders', 3, 8);
INSERT INTO public.voto VALUES ('giudice6@tech.it', 'ByteBuilders', 3, 8);
INSERT INTO public.voto VALUES ('giudice7@innovation.it', 'AppCreators', 4, 9);
INSERT INTO public.voto VALUES ('giudice8@startup.it', 'AppCreators', 4, 9);
INSERT INTO public.voto VALUES ('giudice9@digital.it', 'WebWizards', 5, 10);
INSERT INTO public.voto VALUES ('giudice10@code.it', 'WebWizards', 5, 9);
INSERT INTO public.voto VALUES ('giudice9@digital.it', 'SolutionSeekers', 5, 8);
INSERT INTO public.voto VALUES ('giudice10@code.it', 'SolutionSeekers', 5, 9);


--
-- TOC entry 3475 (class 0 OID 0)
-- Dependencies: 227
-- Name: documento_id_doc_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.documento_id_doc_seq', 16, true);


--
-- TOC entry 3476 (class 0 OID 0)
-- Dependencies: 218
-- Name: hackathon_id_hackathon_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.hackathon_id_hackathon_seq', 25, true);


--
-- TOC entry 3284 (class 2606 OID 17320)
-- Name: commento commento_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.commento
    ADD CONSTRAINT commento_pkey PRIMARY KEY (email_giudice, id_doc);


--
-- TOC entry 3290 (class 2606 OID 17372)
-- Name: documento documento_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.documento
    ADD CONSTRAINT documento_pkey PRIMARY KEY (id_doc);


--
-- TOC entry 3272 (class 2606 OID 17129)
-- Name: giudice giudice_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.giudice
    ADD CONSTRAINT giudice_pkey PRIMARY KEY (email);


--
-- TOC entry 3274 (class 2606 OID 17142)
-- Name: hackathon hackathon_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.hackathon
    ADD CONSTRAINT hackathon_pkey PRIMARY KEY (id_hackathon);


--
-- TOC entry 3288 (class 2606 OID 17351)
-- Name: invitogiudice invitogiudice_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.invitogiudice
    ADD CONSTRAINT invitogiudice_pkey PRIMARY KEY (email_giudice, id_hackathon);


--
-- TOC entry 3270 (class 2606 OID 17123)
-- Name: organizzatore organizzatore_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.organizzatore
    ADD CONSTRAINT organizzatore_pkey PRIMARY KEY (email);


--
-- TOC entry 3268 (class 2606 OID 17118)
-- Name: partecipante partecipante_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.partecipante
    ADD CONSTRAINT partecipante_pkey PRIMARY KEY (email);


--
-- TOC entry 3282 (class 2606 OID 17187)
-- Name: partecipante_team partecipante_team_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.partecipante_team
    ADD CONSTRAINT partecipante_team_pkey PRIMARY KEY (email_partecipante, nome_team);


--
-- TOC entry 3280 (class 2606 OID 17172)
-- Name: registrazione registrazione_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.registrazione
    ADD CONSTRAINT registrazione_pkey PRIMARY KEY (email_partecipante, id_hackathon);


--
-- TOC entry 3278 (class 2606 OID 17157)
-- Name: team_hackathon team_hackathon_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.team_hackathon
    ADD CONSTRAINT team_hackathon_pkey PRIMARY KEY (nome_team, id_hackathon);


--
-- TOC entry 3276 (class 2606 OID 17152)
-- Name: team team_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.team
    ADD CONSTRAINT team_pkey PRIMARY KEY (nome_team);


--
-- TOC entry 3286 (class 2606 OID 17336)
-- Name: voto voto_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.voto
    ADD CONSTRAINT voto_pkey PRIMARY KEY (email_giudice, nome_team);


--
-- TOC entry 3309 (class 2620 OID 17383)
-- Name: documento trg_check_data_caricamento; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trg_check_data_caricamento BEFORE INSERT OR UPDATE ON public.documento FOR EACH ROW EXECUTE FUNCTION public.check_data_caricamento_documento();


--
-- TOC entry 3306 (class 2620 OID 17260)
-- Name: registrazione trg_check_hackathon_overlap; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trg_check_hackathon_overlap BEFORE INSERT OR UPDATE ON public.registrazione FOR EACH ROW EXECUTE FUNCTION public.check_hackathon_overlap();


--
-- TOC entry 3307 (class 2620 OID 17256)
-- Name: registrazione trg_check_max_partecipanti; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trg_check_max_partecipanti BEFORE INSERT ON public.registrazione FOR EACH ROW EXECUTE FUNCTION public.check_max_partecipanti();


--
-- TOC entry 3304 (class 2620 OID 17272)
-- Name: team_hackathon trg_check_max_partecipanti_per_team; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trg_check_max_partecipanti_per_team BEFORE INSERT ON public.team_hackathon FOR EACH ROW EXECUTE FUNCTION public.check_max_partecipanti_per_team();


--
-- TOC entry 3305 (class 2620 OID 17270)
-- Name: team_hackathon trg_check_max_team; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trg_check_max_team BEFORE INSERT ON public.team_hackathon FOR EACH ROW EXECUTE FUNCTION public.check_max_team();


--
-- TOC entry 3308 (class 2620 OID 17251)
-- Name: partecipante_team trg_check_unique_partecipante; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER trg_check_unique_partecipante BEFORE INSERT ON public.partecipante_team FOR EACH ROW EXECUTE FUNCTION public.check_unique_partecipante_per_hackathon();


--
-- TOC entry 3298 (class 2606 OID 17326)
-- Name: commento fk_commento_giudice; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.commento
    ADD CONSTRAINT fk_commento_giudice FOREIGN KEY (email_giudice) REFERENCES public.giudice(email);


--
-- TOC entry 3301 (class 2606 OID 17352)
-- Name: invitogiudice fk_invito_giudice; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.invitogiudice
    ADD CONSTRAINT fk_invito_giudice FOREIGN KEY (email_giudice) REFERENCES public.giudice(email);


--
-- TOC entry 3302 (class 2606 OID 17357)
-- Name: invitogiudice fk_invito_hack; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.invitogiudice
    ADD CONSTRAINT fk_invito_hack FOREIGN KEY (id_hackathon) REFERENCES public.hackathon(id_hackathon);


--
-- TOC entry 3291 (class 2606 OID 17143)
-- Name: hackathon fk_organizzatore; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.hackathon
    ADD CONSTRAINT fk_organizzatore FOREIGN KEY (email_organizzatore) REFERENCES public.organizzatore(email);


--
-- TOC entry 3296 (class 2606 OID 17188)
-- Name: partecipante_team fk_partecipante; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.partecipante_team
    ADD CONSTRAINT fk_partecipante FOREIGN KEY (email_partecipante) REFERENCES public.partecipante(email);


--
-- TOC entry 3297 (class 2606 OID 17193)
-- Name: partecipante_team fk_team; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.partecipante_team
    ADD CONSTRAINT fk_team FOREIGN KEY (nome_team) REFERENCES public.team(nome_team);


--
-- TOC entry 3303 (class 2606 OID 17373)
-- Name: documento fk_team_doc; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.documento
    ADD CONSTRAINT fk_team_doc FOREIGN KEY (nome_team, id_hackathon) REFERENCES public.team_hackathon(nome_team, id_hackathon);


--
-- TOC entry 3299 (class 2606 OID 17342)
-- Name: voto fk_team_voto; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.voto
    ADD CONSTRAINT fk_team_voto FOREIGN KEY (nome_team, id_hackathon) REFERENCES public.team_hackathon(nome_team, id_hackathon);


--
-- TOC entry 3300 (class 2606 OID 17337)
-- Name: voto fk_voto_giudice; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.voto
    ADD CONSTRAINT fk_voto_giudice FOREIGN KEY (email_giudice) REFERENCES public.giudice(email);


--
-- TOC entry 3294 (class 2606 OID 17173)
-- Name: registrazione registrazione_email_partecipante_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.registrazione
    ADD CONSTRAINT registrazione_email_partecipante_fkey FOREIGN KEY (email_partecipante) REFERENCES public.partecipante(email);


--
-- TOC entry 3295 (class 2606 OID 17178)
-- Name: registrazione registrazione_id_hackathon_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.registrazione
    ADD CONSTRAINT registrazione_id_hackathon_fkey FOREIGN KEY (id_hackathon) REFERENCES public.hackathon(id_hackathon);


--
-- TOC entry 3292 (class 2606 OID 17163)
-- Name: team_hackathon team_hackathon_id_hackathon_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.team_hackathon
    ADD CONSTRAINT team_hackathon_id_hackathon_fkey FOREIGN KEY (id_hackathon) REFERENCES public.hackathon(id_hackathon);


--
-- TOC entry 3293 (class 2606 OID 17158)
-- Name: team_hackathon team_hackathon_nome_team_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.team_hackathon
    ADD CONSTRAINT team_hackathon_nome_team_fkey FOREIGN KEY (nome_team) REFERENCES public.team(nome_team);


-- Completed on 2025-07-21 13:54:40 UTC

--
-- PostgreSQL database dump complete
--

